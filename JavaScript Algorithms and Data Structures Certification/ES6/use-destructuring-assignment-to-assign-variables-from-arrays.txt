let a = 8, b = 6;
// change code below this line
[a, b]= [b, a] /*In the previous attemp at solving the challenge i reassigned the variables a and b. This resulted in an error since the keyword let does not allow for the declaration of a variable that has the same name as another. What i can do instead is to simply assign the values using array notation as if the a and b variables were elements inside an array. this array needs not be declared since its a destructuring assignment. */
// change code above this line
console.log(a); // should be 6
console.log(b); // should be 8

/*ES6 makes destructuring arrays as easy as destructuring objects.
One key difference between the spread operator and array 
destructuring is that the spread operator unpacks all contents of an 
array into a comma-separated list. Consequently, you cannot pick or 
choose which elements you want to assign to variables.
Destructuring an array lets us do exactly that:

const [a, b] = [1, 2, 3, 4, 5, 6];
console.log(a, b); // 1, 2

The variable a is assigned the first value of the array, and b is 
assigned the second value of the array. We can also access the value 
at any index in an array with destructuring by using commas to reach 
the desired index:

const [a, b,,, c] = [1, 2, 3, 4, 5, 6];
console.log(a, b, c); // 1, 2, 5*/