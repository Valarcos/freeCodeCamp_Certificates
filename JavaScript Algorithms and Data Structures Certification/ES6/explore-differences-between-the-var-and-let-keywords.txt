let catName;
let quote;
function catTalk() {
  "use strict";

  catName = "Oliver";
  quote = catName + " says Meow!";

}
catTalk();

/*One of the biggest problems with declaring v.ariables with the 
v.ar keyword is that you can overwrite v.ariable declarations 
without an error.

v.ar camper = 'James';
v.ar camper = 'David';
console.log(camper);
// logs 'David'

As you can see in the code above, the camper v.ariable is originally 
declared as James and then overridden to be David. In a small 
application, you might not run into this type of problem, but when 
your code becomes larger, you might accidentally overwrite a 
v.ariable that you did not intend to overwrite. Because this 
behavior does not throw an error, searching and fixing bugs becomes 
more difficult.
A new keyword called let was introduced in ES6 to solve this 
potential issue with the v.ar keyword. If you were to replace v.ar 
with let in the v.ariable declarations of the code above, the result 
would be an error.*/