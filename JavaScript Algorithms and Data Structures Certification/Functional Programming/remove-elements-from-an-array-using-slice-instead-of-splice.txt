  function nonMutatingSplice(cities) {
  // Add your code below this line
  return cities.slice(0,3);

  // Add your code above this line
}
var inputCities = ["Chicago", "Delhi", "Islamabad", "London", "Berlin"];
let result= nonMutatingSplice(inputCities);

console.log(result);

/**
 * A common pattern while working with arrays is when you want to 
 * remove items and keep the rest of the array. JavaScript offers 
 * the sp,lice method for this, which takes arguments for the index 
 * of where to start removing items, then the number of items to 
 * remove. If the second argument is not provided, the default is to 
 * remove items through the end. However, the sp,lice method mutates 
 * the original array it is called on. Here's an example:
 * 
 * var cities= ["Chicago", "Delhi", "Islamabad", "London", "Berlin"];
 * cities.sp,lice(3, 1); // Returns "London" and deletes it from the 
 * cities array
 * // cities is now ["Chicago", "Delhi", "Islamabad", "Berlin"]
 * 
 * As we saw in the last challenge, the slice method does not mutate 
 * the original array, but returns a new one which can be saved into 
 * a variable. Recall that the slice method takes two arguments for 
 * the indices to begin and end the slice (the end is non-inclusive),
 *  and returns those items in a new array. Using the slice method 
 * instead of sp,lice helps to avoid any array-mutating side effects.
 **/