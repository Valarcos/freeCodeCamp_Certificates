function zeroArray(m, n) {
  // Creates a 2-D array with m rows and n columns of zeroes
  let newArray = [];
  let row = [];
  for (let i = 0; i < m; i++) {
    // Adds the m-th row into newArray
    row= [];/*Before this line was added, the row value was never
            reset to empty causing the newArray.push(row); line to
            add the row with more zeroes than intended to the array*/
    for (let j = 0; j < n; j++) {
      // Pushes n zeroes into the current row to create the columns
      row.push(0);/*As the row variable isn't being reinitialized,
                  when the loop executes the row.push(0) line, my 
                  guess is that those zeroes are being pushed to 
                  every instance of the row in the array (all row
                  elements in the array get zeroes added simulta-
                  neously)*/
    }
    // Pushes the current row, which now has n zeroes in it, to the array
    newArray.push(row);
  }
  return newArray;
}

let matrix = zeroArray(3, 2);
console.log(matrix);

/*Sometimes it's necessary to save information, increment counters, 
or re-set variables within a loop. A potential issue is when 
variables either should be reinitialized, and aren't, or vice versa. 
This is particularly dangerous if you accidentally reset the 
variable being used for the terminal condition, causing an infinite 
loop.

Printing variable values with each cycle of your loop by using 
console.log() can uncover buggy behavior related to resetting, or 
failing to reset a variable.*/