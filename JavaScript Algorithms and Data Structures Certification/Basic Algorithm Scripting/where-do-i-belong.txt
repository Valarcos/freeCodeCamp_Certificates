function getIndexToIns(arr, num) {
  // Find my place in this sorted array.
  let compareNumbers; //we declare the variable for the arrow function
  arr.push(num);  //we add the value to the array
  arr.sort(compareNumbers = (a, b) => { return a - b; });
  /*We sort the array according to a function. All non-undefined 
  array elements are sorted according to the return value of the 
  compare function (all undefined elements are sorted to the end of 
  the array, with no call to compareFunction). If a and b are two 
  elements being compared, then:

  If compareFunction(a, b) returns less than 0, sort a to an index 
  lower than b (i.e. a comes first).

  If compareFunction(a, b) returns 0, leave a and b unchanged with 
  respect to each other, but sorted with respect to all different 
  elements. Note: the ECMAscript standard does not guarantee this 
  behavior, thus, not all browsers (e.g. Mozilla versions dating 
  back to at least 2003) respect this.

  If compareFunction(a, b) returns greater than 0, sort b to an 
  index lower than a (i.e. b comes first).

  compareFunction(a, b) must always return the same value when given 
  a specific pair of elements a and b as its two arguments. If 
  inconsistent results are returned, then the sort order is 
  undefined.*/
  console.log(arr);
  let index;
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] == num) {
      return index = i;
    }
  }
  return index;
}

let result1 = getIndexToIns([40, 60], 50);
console.log(result1 + " should return 1");

let result2 = getIndexToIns([10, 20, 30, 40, 50], 35);
console.log(result2 + " should return 3");

let result3 = getIndexToIns([10, 20, 30, 40, 50], 30);
console.log(result3 + " should return 2");

let result4 = getIndexToIns([3, 10, 5], 3);
console.log(result4 + " should return 0");

let result5 = getIndexToIns([5, 3, 20, 3], 5);
console.log(result5 + " should return 2");

let result6 = getIndexToIns([2, 20, 10], 19);
console.log(result6 + " should return 2");

let result7 = getIndexToIns([2, 5, 10], 15);
console.log(result7 + " should return 3");

let result8 = getIndexToIns([], 1);
console.log(result8 + " should return 0");