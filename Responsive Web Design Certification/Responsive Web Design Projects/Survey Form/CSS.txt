/*Remember to always try to give format to html elements using class and or id. Avoid using 
html tag gral selectors when possible, because it may cause conflict with other elements in the document if you are using imported elements (fonts, libraries, scripts, etc.)*/

@import url("https://fonts.googleapis.com/css?family=Roboto+Mono&display=swap");

:root {
	/*:root can be useful for declaring global CSS variables*/
	--color-text: #f3f3f3;
	--color-container-background: #e53935;
	--color-form-background: rgba(27, 27, 50, 0.8);
	--color-button: #e25b0f;
}

*, /* '*' is an universal selector*/
*::before,
	*::after {
	box-sizing: border-box;/*border-box tells the browser to account for any border and padding in the values you specify for an element's width and height. If you set an element's width to 100 pixels, that 100 pixels will include any border or padding you added, and the content box will shrink to absorb that extra width. This typically makes it much easier to size elements.*/
} /*The universal selector '*' is often used when there is a need to stablish a certain ruling for all of the document elements.

There are times when this is done to set the margin and padding attributes to a value of 0. This is a common technique called a CSS reset. Different browsers use different default margins, causing sites to look different by margins. The * means "all elements" (a universal selector), so we are setting all elements to have zero margins, and zero padding, thus making them look the same in all browsers.*/

.container {
	font-family: "Roboto Mono", monospace;
	font-size: 1rem;
	line-height: 1.4;
	color: var(--color-text);
	margin: 0;
}

/* mobile friendly alternative to using background-attachment: fixed */
.container::before {
	/*This is done using the ::selector so that the following styles load before the base content of the container element*/
	content: "";
	position: fixed;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	z-index: -1; /*The lower the z-index value, the further to the back the element is pushed, possibly being covered by other elements that go on top of it.*/
	background: var(
		--color-container-background
	); /*The reason behind establishing a background color, even if the idea is to use an image as a background, is to prevent the cases where the image does not load correctly, leaving the background with the default color for the container element(white). Another possible case is when the screen resolution is way bigger than the image size, leaving the background color uncovered, producing the same issue. As this will generally cause conflict with the other colors used in the webpage, its advised to always set a fallback background.*/
	background-image: linear-gradient(
			90deg,
			rgba(213, 80, 320, 0.6),
			rgba(136, 320, 50, 0.3)
		),
		url(https://via.placeholder.com/400x150?text=Placeholder+img);
	background-size: cover; /*The cover value scales the image as large as possible without stretching the image. If the proportions of the image differ from the element, it is cropped either vertically or horizontally so that no empty space remains.*/
	background-repeat: no-repeat; /*The background-repeat CSS property sets how background images are repeated. A background image can be repeated along the horizontal and vertical axes, or not repeated at all.*/
	background-position: center;
}

#title {
	line-height: 1.2;
}

.p {
	font-size: 1.125rem;
}

#title,
.p {
	margin-top: 0;
	margin-bottom: 0.5rem;
}

.label {
	display: flex;
	align-items: center;
	font-size: 1.125rem;
	margin-bottom: 0.5rem;
}

input,
button,
select,
textarea {
	margin: 0;
	font-family: inherit;
	font-size: inherit;
	line-height: inherit;
}

button {
	border: none;
}

.container {
	width: 100%;
	margin: 3.125rem auto 0 auto;
}

@media (min-width: 576px) {
	.container {
		max-width: 540px;
	}
}

@media (min-width: 768px) {
	.container {
		max-width: 720px;
	}
}

.header {
	padding: 0 0.625rem;
	margin-bottom: 1.875rem;
}

#description {
	font-style: italic;
	text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.4);
}

.clue {
	margin-left: 0.25rem;
	font-size: 0.9rem;
	color: #e4e4e4;
}

/* form */

#survey-form {
	background: var(--color-form-background);
	padding: 2.5rem 0.625rem;
	border-radius: 0.25rem;
}

@media (min-width: 480px) {
	#survey-form {
		padding: 2.5rem;
	}
}

.form-group {
	margin: 0 auto 1.25rem auto;
	padding: 0.25rem;
}

.form-control {
	display: block;
	width: 100%;
	height: 2.375rem;
	padding: 0.375rem 0.75rem;
	color: #495057;
	background-color: #fff;
	background-clip: padding-box;
	border: 1px solid #ced4da;
	border-radius: 0.25rem;
	transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.form-control:focus {
	border-color: #80bdff;
	outline: 0;
	box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.input-radio,
.input-checkbox {
	display: inline-block;
	margin-right: 0.625rem;
	min-height: 1.25rem;
	min-width: 1.25rem;
}

.input-textarea {
	min-height: 120px;
	width: 100%;
	padding: 0.625rem;
	resize: vertical;
}

.submit-button {
	display: block;
	width: 100%;
	padding: 0.75rem;
	background: var(--color-button);
	color: inherit;
	border-radius: 2px;
	cursor: pointer;
}